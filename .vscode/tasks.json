{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Install Dev Deps",
      "type": "shell",
      "command": "python -m venv venv && venv/bin/python -m pip install --upgrade pip && venv/bin/python -m pip install -r requirements.txt || true && venv/bin/python -m pip install streamlit plotly pandas",
      "windows": {
        "command": "if ($LASTEXITCODE -eq 0 -or (Test-Path venv)) { .\\venv\\Scripts\\python.exe -m pip install --upgrade pip; if (Test-Path requirements.txt) { .\\venv\\Scripts\\python.exe -m pip install -r requirements.txt; } .\\venv\\Scripts\\python.exe -m pip install streamlit plotly pandas }",
        "options": {
          "shell": {
            "executable": "powershell.exe",
            "args": ["-Command"]
          }
        }
      }
    },
    {
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "detail": "Creates venv and installs all dependencies (requirements.txt + streamlit packages)"
    },
    {
      "label": "Run: Automation Runner (Dry-Run)",
      "type": "shell",
      "command": "test -f .env && venv/bin/python -m dotenv -f .env run --override -- venv/bin/python automation/runner.py || venv/bin/python automation/runner.py",
      "windows": {
        "command": "if (Test-Path .env) { .\\venv\\Scripts\\python.exe -m dotenv -f .env run --override -- .\\venv\\Scripts\\python.exe automation/runner.py } else { .\\venv\\Scripts\\python.exe automation/runner.py }",
        "options": {
          "shell": {
            "executable": "powershell.exe",
            "args": ["-Command"]
          }
        }
      }
    }
  ]
}