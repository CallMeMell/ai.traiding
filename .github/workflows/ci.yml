name: CI - Continuous Integration

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run tests
        env:
          DRY_RUN: true
          BROKER_NAME: binance
          BINANCE_BASE_URL: https://testnet.binance.vision
        run: |
          pytest tests/ -v --cov=. --cov-report=term-missing --cov-report=xml
      
      - name: Upload coverage
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
  
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install linting tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
      
      - name: Run flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Check black formatting
        run: |
          black --check . || echo "Black formatting issues found (non-blocking)"
      
      - name: Check import sorting
        run: |
          isort --check-only . || echo "Import sorting issues found (non-blocking)"
  
  system-test:
    name: System Integration Test
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run system orchestrator (dry-run)
        env:
          DRY_RUN: true
        run: |
          python system/orchestrator.py
      
      - name: Verify session data
        run: |
          if (Test-Path "data/session/events.jsonl") {
            Write-Host "✅ Session events generated"
          } else {
            Write-Host "❌ Session events not found"
            exit 1
          }
        shell: pwsh
